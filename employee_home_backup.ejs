<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">

<style>
  @import url('https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600&display=swap');

body{
	line-height: 1.5;
	font-family: 'Raleway', sans-serif;
	font-weight: 400;
}
body.hidden-scrolling{
	overflow-y: hidden;
}
*{
	margin:0;
	box-sizing: border-box;
}
.container{
	max-width: 1170px;
	margin:auto;
}
ul{
	list-style: none;
	margin:0;
	padding:0;
}
a{
	text-decoration: none;
}
/*header*/
.header{
	position: absolute;
	width: 100%;
	left:0;
	top:0;
	z-index: 99;
	padding: 15px;
}
.header-main{
	background-color: #ffffff;
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 10px 0;
	border-radius: 4px;
}
.header .logo{
	padding: 0 15px;
}
.header .logo a{
	font-size: 30px;
	text-transform: capitalize;
	color: #fffefe;
	font-weight: 600;
}
.header .nav-menu{
	padding: 0 15px;
}
.header .menu > .menu-item{
	display: inline-block;
	margin-left: 30px;
	position: relative;
}
.header .menu > .menu-item > a{
	display: block;
	padding: 12px 0;
	font-size: 16px;
	color: #f1eeee;
	text-transform: capitalize;
	font-weight: 600;
	transition: all 0.3s ease;
}
.header .menu > .menu-item > a .plus{
	display: inline-block;
	height: 12px;
	width: 12px;
	position: relative;
	margin-left:5px; 
	pointer-events: none;
}
.header .menu > .menu-item > a .plus:before,
.header .menu > .menu-item > a .plus:after{
	content:'';
	position: absolute;
	box-sizing: border-box;
	left: 50%;
	top:50%;
	background-color: #000000;
	height: 2px;
	width: 100%;
	transform: translate(-50%,-50%);
	transition: all 0.3s ease;
}
.header .menu > .menu-item:hover > a .plus:before,
.header .menu > .menu-item:hover > a .plus:after{
   background-color: #e91e63;
}
.header .menu > .menu-item > a .plus:after{
   transform: translate(-50%,-50%) rotate(-90deg);	
}
.header .menu > .menu-item > .sub-menu > .menu-item > a:hover,
.header .menu > .menu-item:hover > a{
	color: #e91e63;
}
.header .menu > .menu-item > .sub-menu{
	box-shadow: 0 0 10px rgba(0,0,0,0.2);
	width: 220px;
	position: absolute;
	left:0;
	top:100%;
	background-color: #ffffff;
	padding: 10px 0;
	border-top: 3px solid #e91e63;
	transform: translateY(10px);
	transition: all 0.3s ease;
	opacity:0;
	visibility: hidden;
}
@media(min-width: 992px){
.header .menu > .menu-item-has-children:hover > .sub-menu{
	transform: translateY(0);
	opacity: 1;
	visibility: visible;
 }
 .header .menu > .menu-item-has-children:hover > a .plus:after{
    transform: translate(-50%,-50%) rotate(0deg);		
 }
}
.header .menu > .menu-item > .sub-menu > .menu-item{
	display: block;
}
.header .menu > .menu-item > .sub-menu > .menu-item > a{
	display: block;
	padding: 10px 20px;
	font-size: 16px;
	font-weight: 600;
	color: #f7f3f3;
	transition: all 0.3s ease;
	text-transform: capitalize;
}
.header .open-nav-menu{
	height: 34px;
	width: 40px;
	margin-right: 15px;
	display: none;
	align-items: center;
	justify-content: center;
	cursor: pointer;
}
.header .open-nav-menu span{
	display: block;
	height: 3px;
	width: 24px;
	background-color: #000000;
    position: relative;
}
.header .open-nav-menu span:before,
.header .open-nav-menu span:after{
	content: '';
	position: absolute;
	left:0;
	width: 100%;
	height: 100%;
	background-color: #000000;
	box-sizing: border-box;
}
.header .open-nav-menu span:before{
	top:-7px;
}
.header .open-nav-menu span:after{
	top:7px;
}
.header .close-nav-menu{
	height: 40px;
	width: 40px;
	background-color: #ffffff;
	margin:0 0 15px 15px;
	cursor: pointer;
	display: none;
	align-items: center;
	justify-content: center;
}
.header .close-nav-menu img{
	width: 16px;
}
.header .menu-overlay{
	position: fixed;
	z-index: 999;
	background-color: rgba(0,0,0,0.5);
	left:0;
	top:0;
	height: 100%;
	width: 100%;
	visibility: hidden;
	opacity:0;
	transition: all 0.3s ease;
}

/*home section*/
.home-section{
	width: 100%;
	display: block;
	min-height: 100vh;
	background-image: url('../img/home.jpg');
	background-position: center top;
	background-size: cover;
}

/* body{
  background-color: #000000;
}
h1,h2,h3,h4,p{
  color: white  ;
} */
/* responsive */

@media(max-width: 991px){
	.header .menu-overlay.active{
	visibility: visible;
	opacity: 1;
}
	.header .nav-menu{
		position: fixed;
		right: -280px;
		visibility: hidden;
		width: 280px;
		height: 100%;
		top:0;
		overflow-y: auto;
		background-color: #222222;
		z-index: 1000;
		padding: 15px 0;
		transition: all 0.5s ease;
	}
	.header .nav-menu.open{
		visibility: visible;
		right: 0px;
	}
	.header .menu > .menu-item{
		display: block;
		margin:0;
	}
	.header .menu > .menu-item-has-children > a{
		display: flex;
		justify-content: space-between;
		align-items: center;
	}
	.header .menu > .menu-item > a{
		color: #ffffff;
		padding: 12px 15px;
		border-bottom: 1px solid #333333;
	}
	.header .menu > .menu-item:first-child > a{
	    border-top: 1px solid #333333;	
	}
	.header .menu > .menu-item > a .plus:before, 
	.header .menu > .menu-item > a .plus:after{
		background-color: #ffffff;
	}
	.header .menu > .menu-item-has-children.active > a .plus:after{
        transform: translate(-50%,-50%) rotate(0deg);
	}
	.header .menu > .menu-item > .sub-menu{
		width: 100%;
		position: relative;
		opacity: 1;
		visibility: visible;
		border:none;
		background-color: transparent;
		box-shadow: none;
		transform: translateY(0px);
		padding: 0px;
		left: auto;
		top:auto;
		max-height: 0;
		overflow: hidden;
	}
	.header .menu > .menu-item > .sub-menu > .menu-item > a{
		padding: 12px 45px;
		color: #ffffff;
		border-bottom: 1px solid #333333;
	}
	.header .close-nav-menu,
	.header .open-nav-menu{
		display: flex;
	}
}


</style>
<style>
  h1,p{
    text-align: center;
    font-family:'Times New Roman', Times, serif;
    padding: 1%;
  }
  h1{
    font-size: 2rem;
    font-weight: bold;
    margin-top: 2rem;
  }
  p,h4{
    font-size: 1rem;  
  }
  h2{
    font-size: 1rem;  

  }


  .main{
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
  }
  label{
    font-weight: bold;

  }
</style>

<body>
  <%- include('./alert_msg.ejs') %>
  <header class="header bg-primary" >
    <div class="container bg-primary">
       <div class="header-main bg-primary">
          <div class="logo">
             <a href="#">Swaayatt Robots</a>
          </div>
          <div class="open-nav-menu">
             <span></span>
          </div>
          <div class="menu-overlay">
          </div>
          <!-- navigation menu start -->
          <nav class="nav-menu">
            <div class="close-nav-menu">
               <img src="img/close.svg" alt="close">
            </div>
            <ul class="menu">
               <li class="menu-item menu-item-has-children">
                  <a href="#" data-toggle="sub-menu">Home <i class="plus"></i></a>
                  <ul class="sub-menu">
                      <li class="menu-item"><a href="#">Home 1</a></li>
                      <li class="menu-item"><a href="#">Home 2</a></li>
                      <li class="menu-item"><a href="#">Home 3</a></li>
                      <li class="menu-item"><a href="#">Home 4</a></li>
                  </ul>
               </li>
               <li class="menu-item">
                  <a href="#">About</a>
               </li>
               <li class="menu-item">
                  <a href="#">Services</a>
               </li>
               <li class="menu-item menu-item-has-children">
                  <a href="#" data-toggle="sub-menu">Pages <i class="plus"></i></a>
                  <ul class="sub-menu">
                      <li class="menu-item"><a href="#">page 1</a></li>
                      <li class="menu-item"><a href="#">page 2</a></li>
                      <li class="menu-item"><a href="#">page 3</a></li>
                      <li class="menu-item"><a href="#">page 4</a></li>
                  </ul>
               </li>
               <li class="menu-item">
                  <a href="#">News</a>
               </li>
               <li class="menu-item">
                  <a href="#">Contact</a>
               </li>
            </ul>
          </nav>
          <!-- navigation menu end -->
       </div>
    </div>
 </header>


  <div class="main">
    <h1> Select Days To Meet </h1>
    <div class="mainDiv" style="display: flex; flex-direction: row; justify-content: space-around; width: 100%; padding: 2%; width: 70%; flex-wrap: wrap;box-shadow: 0rem 0.5rem 1.5rem 0.5rem rgba(167, 164, 164, 0.7) !important;">
    

<!-- o yaar hai mera are o dekh niharo dekha na ho gar tumne khuda dekh lo yaro 
mai jaanta hu bashar hai khuda nahi hai wo bashar hazaar bada ho khuda nhi hota 
dekho dekho bat na puchho 
 -->

 <% if(new_employee.days){  %>
 <% for(let i= 0; i< new_employee.days.length;i++ ){%>
 
  <div class="<%=new_employee.days[i]%>  dayofweek"><%=new_employee.days[i]%> 
 <form action="/removeday" method="post">
  <input type="hidden" name="emp_id" value="<%=new_employee._id%>" >
  <input type="hidden" name="daytoremove" value="<%=new_employee.days[i]%>">
  <span><button type="submit">X</button> </span>

 </form>
 </div>
 
 
 <%}}%>


<div class="addDay dayofweek">
  <form action="/add-day" method="post">
    <input type="hidden" name="emp_id"value="<%=new_employee._id%>" >
    <select name="daytoadd" id="">
      <% const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']; %>
      <% daysOfWeek.forEach(day => { %>
        <% if (!new_employee.days.includes(day)) { %>
          <option value="<%= day %>"><%= day %></option>
        <% } %>
      <% }); %>
    </select>
    <button type="submit">Add</button>
  </form>
</div>

  </div>

<h1>Add Slots of the day</h1>
  <div class="mainDiv" style="display: flex; flex-direction: row; justify-content: space-around; width: 100%; padding: 2%; width: 70%; flex-wrap: wrap;box-shadow: 0rem 0.5rem 1.5rem 0.5rem rgba(167, 164, 164, 0.7) !important;">

<%if(new_employee.slots){%>

  <% for(let i= 0; i< new_employee.slots.length;i++ ){%>
 
    <div class="<%=new_employee.slots[i]%>  dayofweek"><%=new_employee.slots[i]%> 
   <form action="/removeslot" method="post">
    <input type="hidden" name="emp_id" value="<%=new_employee._id%>" >
    <input type="hidden" name="slottoremove" value="<%=new_employee.slots[i]%>">
    <span><button type="submit">X</button> </span>
  
   </form>
   </div>
   
   
   <%}}%>
   <div class="addDay dayofweek">
    <form action="/add-slot" method="post">
      <input type="hidden" name="emp_id" value="<%= new_employee._id %>">
      <select name="slottoadd" id="">
        <% const allSlots = ['12-1', '1-2', '2-3', '3-4', '4-5', '5-6', '6-7', '7-8']; %>
        <% allSlots.forEach(slot => { %>
          <% if (!new_employee.slots.includes(slot)) { %>
            <option value="<%= slot %>"><%= slot %></option>
          <% } %>
        <% }); %>
      </select>
      <button type="submit">Add</button>
    </form>
  </div>

</div>
  
<style>
  .dayofweek{
    border: 2px solid red;
  }
</style>



    <h1>welcome <%= new_employee.name %></h1>

    <h1> Here is all of your appointments </h1>

    <div class="mainDiv" style="display: flex; flex-direction: row; justify-content: space-around; width: 100%; padding: 2%; width: 70%; flex-wrap: wrap;box-shadow: 0rem 0.5rem 1.5rem 0.5rem rgba(167, 164, 164, 0.7) !important;">

      <% if(accepted_appintments.length == 0){  %>

        <h4> No appointments Here </h4>

     <% } else{ %>
        <% for(var i=0; i< accepted_appintments.length; i++){  %>
           
          
          
          <div class="my-2" style="border: 2px solid rgb(49, 45, 45); display: flex; flex-direction: column; padding: 2%; width: 40%;">
                <% var targetId = accepted_appintments[i].userID %>
                 <% var  foundUser = accepted_users.find(user => user._id.toString() === targetId); %> 
      
                 <% var targetId_timeslot = accepted_appintments[i].time_slotId.trim(); %>
              

           <% if(appointment_timeslot_for_accepted_reqests.length == 0 ){ %>
         
          <p>No Appointments Here</p>
          <%  }else{ %>

                 <% var  foundSlot = appointment_timeslot_for_accepted_reqests.find(slot => slot._id.toString() === targetId_timeslot); %> 
      
                 <% const inputDate = new Date(foundSlot.from_date );  %>
    
          
                 <% const day = inputDate.getDate().toString().padStart(2, '0');  %>
                 <% const month = (inputDate.getMonth() + 1).toString().padStart(2, '0');   %>
                 <% const year = inputDate.getFullYear().toString().slice(-2);  %>
                  
                 <% const formattedDate = `${day}/${month}/20${year}`;  %>
                 
                 
    
    
          <%  const inputTime = foundSlot.time;     %>
           <% const [hours, minutes] = inputTime.split(":");   %>
            
            
          <%  const hoursNumber = parseInt(hours, 10);   %>
          <%  const minutesNumber = parseInt(minutes, 10);   %>
            
           <%         const newHours = (hoursNumber + 1 ) % 24;    %>
          <%  const newMinutes = minutesNumber;   %>
               
          <%  const formattedTime = `${newHours.toString().padStart(2, '0')}:${newMinutes.toString().padStart(2, '0')}`;   %>
            
           <% var current_time = formattedTime;   %>
    
    
            
                 
                 
                 
                <strong> <h2> Appointment With </strong> : <%= foundUser.name %> </h2>
      <strong> <h2> <%= foundUser.name %>`s Email </strong>: <%= foundUser.email %>  </h2>
     <strong>  <h2> <%= foundUser.name %>`s Number </strong>:    <%= foundUser.number %>  </h2>
      <strong> <h2>  Date </strong>: <%= formattedDate %>  </h2>
    
       <h2> <strong>From  </strong> <strong style="color: blue;">  <%= foundSlot.time %> </strong> <strong> To </strong>   <strong style="color: blue;"><%= current_time %> </strong>  </h2>
       <h2>   <strong> Text : </strong> <%= accepted_appintments[i].text %></h2>
        
       <%}%>
      
        
<button class="btn-primary show_reSchedule my-1" style="border-radius: 1rem;" >ReSchedule Appointment </button>

<form action="/delete_appointment" style="display: flex; flex-direction: column; width: 100%;" method="post">
<input type="text" name="app_id" value="<%=accepted_appintments[i]._id%>" style="display: none;" >  
<button class="btn-danger show_reSchedule1 my-1" style="border-radius: 1rem;" type="submit" >Cancel Appointment </button>

</form>


<style>
  .btbt{
    display: none; 
  }
</style>
<form action="/reSchedule_appointment" class="btbt my-1" method="post" >

<input type="text" name="appointment_id_to_reschedule" value="<%=accepted_appintments[i]._id%>" style="display: none;" >
<input class="mx-3" type="Date" name="from_date">
<input class="mx-3" type="time" name="from_time">
<input class="mx-3" type="number" name="hours" value="1" style="display: none;">
<input class="mx-3" type="number" name="days" value="1" style="display: none;">
<button type="submit" class="btn-primary my-1">Reschedule Appointment</button>

</form>

            </div>
    
         <% } %>
<% } %>
    </div>



    <script>
      document.querySelector('.show_reSchedule').addEventListener('click',()=>{
  console.log('clisdf;lkajsdfkl')
document.querySelector('.show_reSchedule1').style.display = 'none'
  document.querySelector('.btbt').style.display = 'flex'
  document.querySelector('.show_reSchedule').style.visibility = 'hidden'

})
    </script>

<!-- 

<h1>here is all your appointment requests </h1> 








<div class="mainDiv" style="display: flex; flex-direction: row; justify-content: space-around; width: 100%; flex-wrap: wrap;">
  <% if(appointment_requests1.length == 0){  %>

    <h4> No appintments requests Here </h4>
 <% }else {  %>
    <% for(var i=0; i< appointment_requests1.length; i++){  %>
        <div style="border: 2px solid red; display: flex; flex-direction: column; padding: 2%;">
            <% var targetId = appointment_requests1[i].userID %>
             <% var  foundUser = appointment_users.find(user => user._id.toString() === targetId); %> 
  
             <% var targetId_timeslot = appointment_requests1[i].time_slotId.trim(); %>
             <% var  foundSlot = appointment_timeslot.find(slot => slot._id.toString() === targetId_timeslot); %> 
  
             <% const inputDate = new Date(foundSlot.from_date );  %>

      
             <% const day = inputDate.getDate().toString().padStart(2, '0');  %>
             <% const month = (inputDate.getMonth() + 1).toString().padStart(2, '0');   %>
             <% const year = inputDate.getFullYear().toString().slice(-2);  %>
              
             <% const formattedDate = `${day}/${month}/20${year}`;  %>
             
             


      <%  const inputTime = foundSlot.time;     %>
       <% const [hours, minutes] = inputTime.split(":");   %>
        
        
      <%  const hoursNumber = parseInt(hours, 10);   %>
      <%  const minutesNumber = parseInt(minutes, 10);   %>
        
       <%         const newHours = (hoursNumber + 1 ) % 24;    %>
      <%  const newMinutes = minutesNumber;   %>
           
      <%  const formattedTime = `${newHours.toString().padStart(2, '0')}:${newMinutes.toString().padStart(2, '0')}`;   %>
        
       <% var current_time = formattedTime;   %>


        
             
             
             
             <h2> Appointment With : <%= foundUser.name %> </h2>
   <h2> Requester`s Email : <%= foundUser.email %>  </h2>
   <h2> Requester`s Number :    <%= foundUser.number %>  </h2>
   <h2> Requested Date : <%= formattedDate %>  </h2>

   <h2> from  <strong style="color: blue;">  <%= foundSlot.time %> </strong> To  <strong style="color: blue;"><%= current_time %> </strong>  </h2>
    <p> <%= appointment_requests1[i].text %> </p>

   <form action="/accept_request" method="post" >

 <input type="text" name="slotId_to_update" value="<%= appointment_requests1[i]._id %>" style="display: none;" >
 <input type="text" name="slotId_of_slot" value="<%= appointment_requests1[i].time_slotId %>" >
 <button type="submit">Accept Appointment Request </button>

   </form>

   <form action="/Reject_request" method="post" >

    <input type="text" name="slotId_to_update" value="<%= appointment_requests1[i]._id %>" style="display: none;" >
    <button type="submit">Reject Appointment Request </button>
   
      </form>
    
        </div>
     <% } }%>
    </div>
     -->



<h1>Here is your all Free Time Slots  </h1>

<div class="mainDiv" style="display: flex; flex-direction: row; justify-content: space-around; width: 100%; padding: 2%; width: 70%; flex-wrap: wrap;box-shadow: 0rem 0.5rem 1.5rem 0.5rem rgba(167, 164, 164, 0.7) !important;">
  <% if(time_slots.length == 0){  %>

    <h4> No TIME slots Here </h4>
 <% }else { %>
 
<% for(var i=0; i< time_slots.length; i++){  %>
    <div style="border: 2px solid red; display: flex; flex-direction: column; padding: 1%;">
        

       <% const inputDate = new Date(time_slots[i].from_date);  %>

      
       <% const day = inputDate.getDate().toString().padStart(2, '0');  %>
       <% const month = (inputDate.getMonth() + 1).toString().padStart(2, '0');   %>
       <% const year = inputDate.getFullYear().toString().slice(-2);  %>
        
       
       <% const formattedDate = `${day}/${month}/20${year}`;  %>
        
        <h2> <strong>  Date</strong> : <%= formattedDate %> </h2>
      



        <h2> <strong> from</strong> : <%= time_slots[i].time %> </h2>


      <%  const inputTime = time_slots[i].time.toString();     %>
       <% const [hours, minutes] = inputTime.split(":");   %>
        
        
      <%  const hoursNumber = parseInt(hours, 10);   %>
      <%  const minutesNumber = parseInt(minutes, 10);   %>
        
       <%         const newHours = (hoursNumber + 1 ) % 24;    %>
      <%  const newMinutes = minutesNumber;   %>
           
      <%  const formattedTime = `${newHours.toString().padStart(2, '0')}:${newMinutes.toString().padStart(2, '0')}`;   %>
        
       <% var current_time = formattedTime;   %>


        <h2> <strong> TO </strong>: <%= current_time %> </h2>



        

        <form action="/remove_timeslot" style="display: flex; flex-direction: column; width: 100%;" method="post">
          <input type="text" name="app_id" value="<%=time_slots[i]._id%>" style="display: none;" >  
          <button class="btn-danger show_reSchedule1 my-1" style="border-radius: 1rem;" type="submit" >Remove TimeSlot </button>
          
          </form>
    </div>
 <% }%>
 <%  }%>
</div>






<h1>Add Time Slots</h1>

<div style="display: flex; width: 70%; flex-direction:column;box-shadow: 0rem 0.5rem 1.5rem 0.5rem rgba(167, 164, 164, 0.7) !important; justify-content: center; padding: 2%;">

<div style="display: flex; flex-direction: row; justify-content: space-around; width: 79%;"> <label> Date </label> <label>Time </label><label>How many hours you are free </label><label>Days </label></div>
  <form action="/add_time_slots" class="rechedule_div" method="POST" style="display: flex; flex-direction: row;  padding: 2%; justify-content: space-around;" >


<input type="text" name="employee_email" value="<%=new_employee.email %> " style="display: none;" >
 <input class="mx-3" type="Date" name="from_date">
 <input class="mx-3" type="time" name="from_time">
 <input class="mx-3" type="number" name="hours">
 <input class="mx-3" type="number" name="days">
<button class="btn-primary" type="submit" style="padding: 1%; border-radius: 2rem;" > Add Time Slot </button>

</form>
</div>

<h1>Create Evant / Invite People  </h1>

        
        <div class="my-4" style="display: flex; padding: 2%; width: 70% ; flex-direction: row; justify-content: space-around; margin-top: 2rem;box-shadow: 0rem 0.5rem 1.5rem 0.5rem rgba(167, 164, 164, 0.7) !important;">
  <div style="display: flex; flex-direction: column; border: 1px solid black;padding: 1%; ">
  <h1> Create an 1 Hour Event</h1>
  <input style="visibility: hidden;" type="text" id="linkInput" value="https://uninterested-rose-jackrabbit.cyclic.app/employee/<%=new_employee._id%>" readonly>
  <p> <strong>Duration : </strong> One Hour</p>
  <p> <strong>Type : </strong> Meeting /Interview</p>
  <button id="copyButton" class="btn-primary my-3" style="padding: 1%; border-radius: 2rem;" > Copy Link</button>

</div>
  <div style="display: flex; flex-direction: column; border: 1px solid black;padding: 1%; ">
  <h1> Create an 30 Min Meeting </h1>
  <input style="visibility: hidden;" type="text" id="linkInput1" value="https://uninterested-rose-jackrabbit.cyclic.app/employee/<%=new_employee._id%>" readonly>
  <p> <strong>Duration : </strong> 30 Min</p>
  <p> <strong>Type : </strong>(coming soon)</p>
  <button id="copyButton1" class="btn-primary my-3" style="padding: 1%; border-radius: 2rem;" > Copy Link</button>


</div>
</div>
<script>
    const copyButton = document.getElementById("copyButton");
  const linkInput = document.getElementById("linkInput");

  copyButton.addEventListener("click", () => {
    navigator.clipboard.writeText(linkInput.value).then(() => {
      copyButton.textContent = "Copied 👻";
      console.log("Link copied to clipboard");
    }).catch((error) => {
      console.error("Failed to copy link: ", error);
    });
  });
</script>

<script>
    const mainDiv = document.querySelector('.mainDiv');
const childDivs = Array.from(mainDiv.children);

childDivs.sort((a, b) => {
  const dateA = parseDate(a.querySelector('h1').textContent);
  const dateB = parseDate(b.querySelector('h1').textContent);
  return dateA - dateB;
});

childDivs.forEach(div => mainDiv.appendChild(div));

function parseDate(dateString) {
  const [day, month, year] = dateString.split('/').map(Number);
  return new Date(year + 2000, month - 1, day); // Converting to comparable format
}




</script>
<script>


(() =>{
 
 const openNavMenu = document.querySelector(".open-nav-menu"),
 closeNavMenu = document.querySelector(".close-nav-menu"),
 navMenu = document.querySelector(".nav-menu"),
 menuOverlay = document.querySelector(".menu-overlay"),
 mediaSize = 991;

 openNavMenu.addEventListener("click", toggleNav);
 closeNavMenu.addEventListener("click", toggleNav);
 // close the navMenu by clicking outside
 menuOverlay.addEventListener("click", toggleNav);

 function toggleNav() {
   navMenu.classList.toggle("open");
   menuOverlay.classList.toggle("active");
   document.body.classList.toggle("hidden-scrolling");
 }

 navMenu.addEventListener("click", (event) =>{
     if(event.target.hasAttribute("data-toggle") && 
       window.innerWidth <= mediaSize){
       // prevent default anchor click behavior
       event.preventDefault();
       const menuItemHasChildren = event.target.parentElement;
       // if menuItemHasChildren is already expanded, collapse it
       if(menuItemHasChildren.classList.contains("active")){
         collapseSubMenu();
       }
       else{
         // collapse existing expanded menuItemHasChildren
         if(navMenu.querySelector(".menu-item-has-children.active")){
         collapseSubMenu();
         }
         // expand new menuItemHasChildren
         menuItemHasChildren.classList.add("active");
         const subMenu = menuItemHasChildren.querySelector(".sub-menu");
         subMenu.style.maxHeight = subMenu.scrollHeight + "px";
       }
     }
 });
 function collapseSubMenu(){
   navMenu.querySelector(".menu-item-has-children.active .sub-menu")
   .removeAttribute("style");
   navMenu.querySelector(".menu-item-has-children.active")
   .classList.remove("active");
 }
 function resizeFix(){
    // if navMenu is open ,close it
    if(navMenu.classList.contains("open")){
      toggleNav();
    }
    // if menuItemHasChildren is expanded , collapse it
    if(navMenu.querySelector(".menu-item-has-children.active")){
         collapseSubMenu();
    }
 }

 window.addEventListener("resize", function(){
    if(this.innerWidth > mediaSize){
      resizeFix();
    }
 });

})();


</script>
<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>

</body>
</html> 