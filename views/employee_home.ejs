<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Meetings Slots</title>
</head>
<link rel="stylesheet" href=
"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css"
  integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">


<style>
html {
  scroll-behavior: smooth;
}

body {
    margin: 0;
    padding: 0;
    font-family: Arial, sans-serif;
  }
  
  nav {
    background-color: #2c3e50;
    color: white;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 20px;
  }
  
  .logo {
    font-size: 1.5rem;
  }
  
  ul {
    display: flex;
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  ul li {
    margin-right: 20px;
  }
  
  ul li a {
    color: white;
    text-decoration: none;
    transition: color 0.3s;
  }
/*   
  ul li a:hover {
    color: lightgreen;
  } */
  
  .checkbtn_nav {
    font-size: 30px;
    color: white;
    cursor: pointer;
    display: none;
  }
  
  #check {
    display: none;
  }
  a {
    color: white;
    text-decoration: none;
    background-color: transparent;
  }
  
  @media (max-width: 768px) {
    .checkbtn_nav {
      display: block;
      order: 1;
      margin-right: 20px;
    }
  
    ul {
      position: fixed;
      top: 80px;
      right: -100%;
      width: 100%;
      height: 100vh;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      transition: all 0.3s;
    }
  
    ul li {
      margin: 20px 0;
    }
  
    ul li a {
      font-size: 20px;
    }
  
    #check:checked ~ ul {
      right: 0;
    }
  }

  .loader-container {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(255, 255, 255, 0.8);
            z-index: 1000;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .loader {
            border: 8px solid #3498db;
            border-top: 8px solid #f5f5f5;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }
</style>

<body>

  


  <%- include('./alert_msg.ejs') %>
    <% function formatDateToDDMMYYYY(date) { const day=String(date.getDate()).padStart(2, '0' );
     const month=String(date.getMonth() + 1).padStart(2, '0' ); const year=date.getFullYear();
      return `${day}-${month}-${year}`; } %>



      <% function formatTime(slot) { %>
        <% const times = slot.split('-'); %>
        <% const startTime = formatHour(times[0]); %>
        <% const endTime = formatHour(times[1]); %>
        <%= startTime %> - <%= endTime %>
    <% } %>
    
    <% function formatHour(hour) { %>
        <% return (hour < 10 ? "0" : "") + hour + ":00 PM"; %>
    <% } %>
    
    <nav>
      <input type="checkbox" id="check">
      <label for="check" class="checkbtn_nav">
          <i class="fas fa-bars"></i>
      </label>
      <label class="logo">Swaayatt Robots Meetings (<%=new_employee.name%>)</label>
      <ul>
          <li><a class="active" href="#">Home</a></li>
          <li><a href="#mainDiv_meeting">Meetings</a></li>
      </ul>
  </nav>
  <!-- <div class="loader-container" id="loaderContainer">
    <div class="loader"></div>
</div> -->

<!--       
      <header class="header bg-primary">
        <div class="container bg-primary">
          <div class="header-main bg-primary">
            <div class="logo">
              <a href="#">Swaayatt Robots Meetings (<%=new_employee.name%>)</a>
            </div>
            <div class="open-nav-menu">
              <span></span>
            </div>
            <div class="menu-overlay">
            </div>

            <nav class="nav-menu">
              <div class="close-nav-menu">
                <img src="img/close.svg" alt="close">
              </div>
              <ul class="menu" style="color: white;">
                <li class="menu-item menu-item-has-children">
                  Home
                </li>
                <li class="menu-item">
                  Meetings
                </li>

              </ul>
            </nav>

          </div>
        </div>
      </header> -->
     



<!-- Availability -->
<div class="loader-container" id="loaderContainer">
  <div class="loader"></div>
</div>



<script>
  // Function to format time from '12-1' to '12:00 PM - 1:00 PM'
function formatTime(slot) {
    const times = slot.split('-');
    const startTime = formatHour(times[0]);
    const endTime = formatHour(times[1]);
    return `${startTime} - ${endTime}`;
}

// Function to format hour from '12' to '12:00 PM'
function formatHour(hour) {
    if (hour >= 12) {
        return (hour == 12 ? 12 : hour - 12) + ":00 PM";
    } else {
        return hour + ":00 AM";
    }
}

</script>

<style>
 
 .container_1 {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
      padding: 20px;
      background: white;
      border-radius: 8px;
      max-width: 1200px;
      margin: auto;
      margin-top: -30px;
      /* position: relative;
      z-index: -1; */

      /* box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); */
    }

    h1 {
      font-size: 24px;
      color: #333;
      /* text-align: center; */
      margin-bottom: 20px;
    }

    .section {
      padding: 20px;
      background: #fff;
      border-radius: 8px;
      border: 2px solid #ccc;
    }

    label {
      font-weight: 600;
      margin-right: 75px;
    }

    .checkbox {
      transform: scale(1.2);
      margin-right: 10px;
      margin-left: 20px;
    }

    .day-row {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-bottom: 20px;
    }

    .availability {
      /* font-weight: 700; */
      position: relative;
    right: 60px;
    top: -4px;
    }

    .remove-slot {
      width: 44px;
      height: 44px;
      padding: 4px;
      border-radius: 4px;
      border: none;
      background-color: transparent;
      color: rgb(26, 26, 26);
      transition: all 0.3s;
      /* margin-left: -170px; */
    }

    .remove-slot:hover {
      background-color: #f2f2f2;
    }

    select {
      padding: 3px;
      border-radius: 4px;
      border: 1px solid #ccc;
    }

    .time-slot {
      display: flex;
      align-items: center;
      margin-left: 140px;
      font-size: 1.2vw;
      gap: 5px;
      color: red;
    }

    .time-slot div {
      padding: 10px 14px;
      border: 1px solid #b2b2b2;
      border-radius: 8px;
      background: #fff;
      color: #1a1a1a;
      font-size: 16px;
      margin-right: 5px;
    }

    .add-slot-button {
      padding: 5px 14px;
      border-radius: 4px;
      background:linear-gradient(135deg, #6b8cff, #3a64d8);
      color: white;
      border: none;
      cursor: pointer;
      font-size: 13px;
      font-weight: bold;
      transition: background-color 0.3s;
    }

    .add-slot-button:hover {
      background-color: #0056b3;
    }
    .day-link{
      cursor: pointer;
    }

    @media screen and (max-width: 768px) {
      nav{
        width: 100%;
      }
      .logo {
    font-size: 18px;
}
      .container_1 {
        grid-template-columns: 1fr;
      }

      .time-slot, form {
        margin-left: 0!important;
      }

      .day-row {
        flex-direction: column;
        align-items: flex-start;
      }

      .availability {
        margin-top: 10px;
        margin-left: 110px;
      }
      .day-link{
        margin-left: 40px;
      }
      .btn-copy {
        margin-left: 0!important;
    }
    .time-slot {
    font-size: 5.5vw;
    }
    .time-slot div {
      padding: 7px 6px;
      text-wrap: nowrap;
    }

    hr {
  margin-left: -20px;
  margin-right: -20px;
  /* border: none; 
  border-top: 1px solid var(--color-grey-3, #CCCCCC);  */
}
    }

</style>



      <div class="main">
        <div style="padding: 20px; border-radius: 10px;
        margin-left: 10%;">
          <h1 style="font-size: 34px; margin-bottom: 10px; color: #333333;">Availability</h1>
          <div style="display: flex; align-items: center;">
            <div style="width: 6px; height: 40px; background-color: #0069FF; margin-right: 15px; border-radius: 4px;">
            </div>
            <h2 style="font-size: 24px; margin: 0; color: #0069FF;">Schedule</h2>
          </div>
          <p style="margin-top: 10px; color: #666666; font-size: 18px;">Check your availability and manage your schedule
            easily.</p>
        </div>





<!------------------------------------------------------ This code is under construction for khilesh side -------------------------------------------------------------->

<div class="container_1">

  <div class="meetings section" style="border: 2px solid var(--color-grey-3, #CCCCCC);">
    <h1 style="text-align: center;">Select Days To Meet</h1>
    <hr>
    <% const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']; %>
    <% daysOfWeek.forEach((day, index) => { %>
      <div class="day-row">
        <form action="/dayChange" id="DC_<%= index %>" method="post">
          <input type="hidden" name="emp_id" value="<%= new_employee._id %>">
          <input type="hidden" name="dayToChange" value="<%= day %>">
          <input type="checkbox" id="day_<%= index %>" class="checkbox" name="day_<%= index %>"
            <% if(new_employee.days && new_employee.days.some(d => d.day === day)) { %> checked <% } %>
            onchange="document.getElementById('DC_<%= index %>').submit()"
            >
          <label for="day_<%= index %>" class="day-label" data-day="<%= day %>"><%= day %></label>
        </form>
        <span class="availability">
          <% if(new_employee.days && new_employee.days.some(d => d.day === day)) { %>Available<% } else { %>Unavailable<% } %>
        </span>
        <button class="day-link add-slot-button" data-day="<%= day %>" onclick="showSlots('<%= day %>')">Manage Slots</button>
      </div>
    <% }); %> 
  </div>

  <div class="slots section" id="slotsSection" style="border: 2px solid var(--color-grey-3, #CCCCCC); display: none;">
    <h1 style="text-align: center;">Add Slots for <span id="selectedDay"></span></h1>
    <hr>
    <div id="slotsContainer">
      <!-- Slots will be dynamically inserted here -->
    </div>

    <form action="/add-slot" method="post" style="margin-left: 140px;">
      <input type="hidden" name="emp_id" value="<%= new_employee._id %>">
      <input type="hidden" name="dayToAddSlot" id="dayToAddSlot">

      <select name="slottoadd" id="slotToAdd" required>
        <% const allSlots = ['12-1', '1-2', '2-3', '3-4', '4-5', '5-6', '6-7', '7-8','8-9','9-10','10-11']; %>
        <% allSlots.forEach(slot => { %>
          <option value="<%= slot %>"><%= formatTime(slot) %></option>
        <% }); %>
      </select>

      <button class="add-slot-button" type="submit" onclick="saveLastSelectedDay()">Add Slot</button>
    </form>
  </div>

</div>

<!-- This is onclick function for change slote accordingly days -->
<script>
    function showSlots(day) {
        // Update the selected day in the slots section
        document.getElementById('selectedDay').innerText = day;
        document.getElementById('dayToAddSlot').value = day;

        // Fetch slots for the selected day
        const slotsContainer = document.getElementById('slotsContainer');
        slotsContainer.innerHTML = ''; // Clear previous slots

        const employeeDays = <%- JSON.stringify(new_employee.days) %>;
        const dayObj = employeeDays.find(d => d.day === day);
        const selectedSlots = dayObj ? dayObj.slots : [];

        console.log("hey luck its working now", selectedSlots);
        if (dayObj && dayObj.slots.length > 0) {
            dayObj.slots.forEach(slot => {
                const slotDiv = document.createElement('div');
                slotDiv.className = 'day-row';
                const [start, end] = slot.split('-');
                slotDiv.innerHTML = `
                    <div class="time-slot">
                        <div>${formatHour(start)}</div>
                        <span>-</span>
                        <div>${formatHour(end)}</div>
                  
                    <form action="/removeslot" method="post">
                        <input type="hidden" name="emp_id" value="<%= new_employee._id %>">
                        <input type="hidden" name="dayToRemoveSlot" value="${day}">
                        <input type="hidden" name="slotToRemove" value="${slot}">
                        <button class="remove-slot" type="submit"><i class="fa-solid fa-trash"></i></button>
                    </form>  </div>
                `;
                slotsContainer.appendChild(slotDiv);
            });
        } else {
            const emptyDiv = document.createElement('div');
            emptyDiv.className = 'day-row';
            emptyDiv.innerHTML = `<div class="time-slot">No slots available for ${day}</div>`;
            slotsContainer.appendChild(emptyDiv);
        }

        // Filter out the already selected slots from the dropdown
        const allSlots = ['12-1', '1-2', '2-3', '3-4', '4-5', '5-6', '6-7', '7-8','8-9','9-10','10-11'];
        const availableSlots = allSlots.filter(slot => !selectedSlots.includes(slot));

        const slotToAddSelect = document.getElementById('slotToAdd');
        slotToAddSelect.innerHTML = ''; // Clear previous options
        availableSlots.forEach(slot => {
            const option = document.createElement('option');
            option.value = slot;
            option.text = formatTime(slot);
            slotToAddSelect.appendChild(option);
        });



        // Show the slots section
        document.getElementById('slotsSection').style.display = 'block';

        // Save the selected day to localStorage
        localStorage.setItem('lastSelectedDay', day);
    }

    function formatHour(hour) {
      const h = parseInt(hour);
      const period = h > 12 ? 'AM' : 'PM';
      const adjustedHour = h % 12 || 12; // Convert 0 to 12 for AM
      const formattedHour = `${String(adjustedHour).padStart(2, '0')}:00 ${period}`;
      return formattedHour;
  }

  function formatTime(slot) {
      const [start, end] = slot.split('-');
      return `${formatHour(start)} - ${formatHour(end)}`;
  }

    function saveLastSelectedDay() {
        const selectedDay = document.getElementById('selectedDay').innerText;
        localStorage.setItem('lastSelectedDay', selectedDay);
    }

    // Automatically show slots for the last selected day (or Sunday if no previous selection) on page load
    window.onload = function() {
        const lastSelectedDay = localStorage.getItem('lastSelectedDay') || 'Sunday';
        showSlots(lastSelectedDay);
    };
</script>




<!-- --------------------------------This code is under construction for khilesh side ---------------------------------------------->



<!-- Events Types -->
        <style>
          .container {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 20px;
            padding: 20px;
            position: relative; 
            margin-top: -30px;
            /* z-index: -1; */
          }

          .card {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            transition: 0.3s;
            width: calc(50% - 20px);
            padding: 20px;
            border-radius: 5px;
            background: #f9f9f9;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            /* z-index: -1; */

            /* pulkit */
          }

          .card:hover {
            box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
          }

          .card h3,
          .card h1 {
            font-size: 24px;
            color: #333;
            font-weight: bold;
            margin-top: 30px;
          }

          .card p {
            margin: 10px 0;
            color: #666;
          }

          .card a {
            color: #0069FF;
            text-decoration: none;
          }

          .card a:hover {
            text-decoration: underline;
          }

          .btn-copy {
            color: #0069FF;
            background-color: transparent;
            border: none;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
            /* margin-top: 10px;  */
            transition: color 0.3s ease;
            margin-left: -333px;
          }

          .btn-copy:hover {
            text-decoration: underline;
          }

          button:focus {
            outline: none !important;
          }

          .copy-icon {
            margin-left: 5px;
          }

          input[type="text"] {
            visibility: hidden;
          }

          @media (max-width: 800px) {
            .card {
              width: 100%;
            }
          }

          .cap {
            height: 7px;
            margin-top: -20px;
            margin-right: -20px;
            margin-left: -20px;
            border-top-left-radius: 4px;
      background:linear-gradient(135deg, #6b8cff, #3a64d8);

            border-top-right-radius: 4px;
          }

          h3 {
            font-family: proxima nova, sans-serif;
            color: var(--text-color, rgb(26, 26, 26));
            font-weight: 400;
            font-size: 20px;
            line-height: 1.4;
          }
        </style>


<div style="padding: 20px; border-radius: 10px; margin-left: 10%;">
  <h1 style="font-size: 34px; margin-bottom: 10px; color: #333333;">Events Types</h1>
  <div style="display: flex; align-items: center;">
    <div style="width: 6px; height: 40px; background-color: #0069FF; margin-right: 15px; border-radius: 4px;">
    </div>
    <h2 style="font-size: 24px; margin: 0; color: #0069FF;">Create Event / Invite People</h2>
  </div>
  <p style="margin-top: 10px; color: #666666; font-size: 18px;">Explore different types of events and create or
    invite people to them.</p>
</div>

        <div class="container">
          <div class="card">
            <div data-id="card-cap" class="cap" ></div>
            <h3>1 Hour Event</h3>
            <input type="text" id="linkInput" value="https://swaayatt.com/employee/<%=new_employee._id%>" readonly>
            <p> One Hour</p>
            <p><strong>Type:</strong> Meeting / Interview</p>
            <hr>
            <button id="copyButton" class="btn-copy" onclick="copyLink('linkInput')">
              <i class="fa fa-copy"></i> Copy Link
            </button>
          </div>

          <div class="card">
            <div data-id="card-cap" class="cap" ></div>
            <h3>30 Min Meeting</h3>
            <input type="text" id="linkInput1" value="https://swaayatt.com/employee/<%=new_employee._id%>" readonly>
            <p><strong>Duration:</strong> 30 Min</p>
            <p><strong>Type:</strong> (coming soon)</p>
            <hr>
            <button id="copyButton1" class="btn-copy" onclick="copyLink('linkInput1')">
              <i class="fa fa-copy"></i> Copy Link
            </button>
          </div>
        </div>


        
        <!-- Schedule Events -->
        <style>
          .mainDiv_meeting {
            position: relative;
            width: 100%;
            max-width: 1330px;
            margin: 50px auto;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            margin-top: -30px;
          }
        
          .meeting {
            position: relative;
            padding: 20px;
            background-color: #f9f9f9;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            opacity: 0;
            transform: translateX(-20px);
            transition: opacity 0.5s ease, transform 0.5s ease;
            width: 48%;
            align-self: flex-start;
            /* z-index: -1; */
          }
        
          .meeting:nth-child(even) {
            align-self: flex-end;
            transform: translateX(20px);
          }
        
          .meeting.active {
            opacity: 1;
            transform: translateX(0);
          }
        
          .meeting h2 {
            font-size: 24px;
            margin-bottom: 10px;
            color: #333333;
          }
        
          .meeting p {
            margin-bottom: 8px;
            color: #666666;
          }
        
          .meeting a {
            color: #0069FF;
            text-decoration: none;
            /* font-weight: bold; */
            transition: color 0.3s ease, font-weight 0.3s ease;
          }
        
          .meeting a:hover {
            color: #0069FF;
            font-weight: bold;
          }
        
          .timeline {
            position: absolute;
            left: 50%;
            top: 0;
            bottom: 0;
            width: 3px;
            background-color: #ccc;
            transform: translateX(-50%);
            /* z-index: -1; */
          }
        
          .meeting::before {
            content: '';
            position: absolute;
            width: 12px;
            height: 12px;
            background-color: #0069FF;
            border-radius: 50%;
            left: -32px;
            top: 50%;
            transform: translateY(-50%);
            z-index: -1;
          }
        
          .meeting:nth-child(odd)::before {
            left: 660px;
          }
        </style>
        
        <div style="padding: 20px; border-radius: 10px; margin-left: 10%;">
          <h1 style="font-size: 34px; margin-bottom: 10px; color: #333333;">Scheduled Events</h1>
          <div style="display: flex; align-items: center;">
            <div style="width: 6px; height: 40px; background-color: #0069FF; margin-right: 15px; border-radius: 4px;"></div>
            <h2 style="font-size: 24px; margin: 0; color: #0069FF; font-weight: normal;">All Meetings</h2>
          </div>
          <p style="margin-top: 10px; color: #666666; font-size: 18px;">Explore all scheduled meetings at a glance.</p>
        </div>
        <div class="mainDiv_meeting" id="mainDiv_meeting">
          <div class="timeline"></div>
          <% for(var i=0 ; i< formattedAppointments.length; i++){ %>
          <div class="meeting">
            <h2>
              <%= new_employee.name %> and <%= formattedAppointments[i].user.name %>
            </h2>
            <p><strong>Date:</strong> <%= formatDateToDDMMYYYY(formattedAppointments[i].time_slot.from_date) %></p>
            <p><strong>Time:</strong> <%= formattedAppointments[i].time_slot.time %></p>
            <p><strong>Interviewee Email:</strong> <%= formattedAppointments[i].user.email %></p>
            <p><strong>Link:</strong> <a href="<%= new_employee.link %>" target="_blank"><%= new_employee.link %></a></p>
            <p><strong>Download Resume:</strong> <a href="/res-dow/<%=formattedAppointments[i].user._id%>" >Download Resume</a></p>

          </div>
          <% } %>
        </div>
      </div>

      <script>
        window.addEventListener('scroll', () => {
          const meetings = document.querySelectorAll('.meeting');
          meetings.forEach((meeting, index) => {
            if (index === 0 || isElementInViewport(meeting)) {
              meeting.classList.add('active');
            } else {
              meeting.classList.remove('active');
            }
          });
        });

        function isElementInViewport(el) {
          const rect = el.getBoundingClientRect();
          return (
            rect.top >= 0 &&
            rect.left >= 0 &&
            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
            rect.right <= (window.innerWidth || document.documentElement.clientWidth)
          );
        }
      </script>

      <script>
        function toggleAvailability(index) {
          var availabilityDiv = document.getElementById("availability_" + index);
          var checkbox = document.getElementById("day_" + index);
          if (checkbox.checked) {
            availabilityDiv.textContent = "Available";
          } else {
            availabilityDiv.textContent = "Unavailable";
          }
        }
      </script>

      <script>
        document.querySelector('.show_reSchedule').addEventListener('click', () => {
          console.log('clisdf;lkajsdfkl')
          document.querySelector('.show_reSchedule1').style.display = 'none'
          document.querySelector('.btbt').style.display = 'flex'
          document.querySelector('.show_reSchedule').style.visibility = 'hidden'

        })
      </script>


      <script>
        const copyButton = document.getElementById("copyButton");
        const linkInput = document.getElementById("linkInput");

        copyButton.addEventListener("click", () => {
          navigator.clipboard.writeText(linkInput.value).then(() => {
            copyButton.innerHTML = "<i class='fas fa-check' style='color: #0069FF;'></i> Copied ";
            setTimeout(() => {
              copyButton.innerHTML = "<i class='fa fa-copy'></i> Copy Link";
            }, 2000);
            console.log("Link copied to clipboard");
          }).catch((error) => {
            console.error("Failed to copy link: ", error);
          });
        });
      </script>


      <!-- <script>
        const mainDiv = document.querySelector('.mainDiv');
        const childDivs = Array.from(mainDiv.children);

        childDivs.sort((a, b) => {
          const dateA = parseDate(a.querySelector('h1').textContent);
          const dateB = parseDate(b.querySelector('h1').textContent);
          return dateA - dateB;
        });

        childDivs.forEach(div => mainDiv.appendChild(div));

        function parseDate(dateString) {
          const [day, month, year] = dateString.split('/').map(Number);
          return new Date(year + 2000, month - 1, day); // Converting to comparable format
        }




      </script> -->


      <script>


        (() => {

          const openNavMenu = document.querySelector(".open-nav-menu"),
            closeNavMenu = document.querySelector(".close-nav-menu"),
            navMenu = document.querySelector(".nav-menu"),
            menuOverlay = document.querySelector(".menu-overlay"),
            mediaSize = 991;

          openNavMenu.addEventListener("click", toggleNav);
          closeNavMenu.addEventListener("click", toggleNav);
          // close the navMenu by clicking outside
          menuOverlay.addEventListener("click", toggleNav);

          function toggleNav() {
            navMenu.classList.toggle("open");
            menuOverlay.classList.toggle("active");
            document.body.classList.toggle("hidden-scrolling");
          }

          navMenu.addEventListener("click", (event) => {
            if (event.target.hasAttribute("data-toggle") &&
              window.innerWidth <= mediaSize) {
              // prevent default anchor click behavior
              event.preventDefault();
              const menuItemHasChildren = event.target.parentElement;
              // if menuItemHasChildren is already expanded, collapse it
              if (menuItemHasChildren.classList.contains("active")) {
                collapseSubMenu();
              }
              else {
                // collapse existing expanded menuItemHasChildren
                if (navMenu.querySelector(".menu-item-has-children.active")) {
                  collapseSubMenu();
                }
                // expand new menuItemHasChildren
                menuItemHasChildren.classList.add("active");
                const subMenu = menuItemHasChildren.querySelector(".sub-menu");
                subMenu.style.maxHeight = subMenu.scrollHeight + "px";
              }
            }
          });
          function collapseSubMenu() {
            navMenu.querySelector(".menu-item-has-children.active .sub-menu")
              .removeAttribute("style");
            navMenu.querySelector(".menu-item-has-children.active")
              .classList.remove("active");
          }
          function resizeFix() {
            // if navMenu is open ,close it
            if (navMenu.classList.contains("open")) {
              toggleNav();
            }
            // if menuItemHasChildren is expanded , collapse it
            if (navMenu.querySelector(".menu-item-has-children.active")) {
              collapseSubMenu();
            }
          }

          window.addEventListener("resize", function () {
            if (this.innerWidth > mediaSize) {
              resizeFix();
            }
          });

        })();


      </script>

      <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js"
        integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n"
        crossorigin="anonymous"></script>
      <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
        integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
        crossorigin="anonymous"></script>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js"
        integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"
        crossorigin="anonymous"></script>
        <script>
          let inactivityTimer;
      
      function resetInactivityTimer() {
      // console.log('timer started')
        clearTimeout(inactivityTimer);
        inactivityTimer = setTimeout(reloadPage, 5 * 60 * 1000); // 1 minute
      }
      
      function reloadPage() {
        // Reload the page
        window.location.reload();
      }
      
      // Event listeners for user interactions
      document.addEventListener('click', resetInactivityTimer);
      document.addEventListener('scroll', resetInactivityTimer);
      document.addEventListener('mousemove', resetInactivityTimer);
      
      // Start the inactivity timer when the page loads
      resetInactivityTimer();
        </script>

      <script>
        function showLoader() {
        document.getElementById('loaderContainer').style.display = 'flex';
      }
      
      // Hide loader when a process ends
      function hideLoader() {
        document.getElementById('loaderContainer').style.display = 'none';
      }
      
      // Attach the showLoader function to the 'beforeunload' event
      window.addEventListener('beforeunload', showLoader);
      
      // Attach the hideLoader function to the 'load' event
      window.addEventListener('load', hideLoader);
      </script>

</body>

</html>