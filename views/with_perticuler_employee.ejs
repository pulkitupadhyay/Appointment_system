<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Swaayatt Appointment System</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
  </head>
  <link
    rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"/>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200"/>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css"
    integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous"/>
  <link rel="stylesheet"href="/stylesheets//with_perticuler/with_perticuler.css"/>
<style>
  #initialMessage{
  margin-top: 25px;
  text-align: center;
  h1{
    text-wrap: nowrap;
        font-size: 24px;
        font-weight: 700;
        /* text-align: center; */
        margin-left: 40px;
  }
  p{
    margin-left: 42px;
  }
}
</style>
  <body>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script>
      let inactivityTimer;

function resetInactivityTimer() {
  // console.log('timer started')
    clearTimeout(inactivityTimer);
    inactivityTimer = setTimeout(reloadPage, 5 * 60 * 1000); // 1 minute
}

function reloadPage() {
    // Reload the page
    window.location.reload();
}

// Event listeners for user interactions
document.addEventListener('click', resetInactivityTimer);
document.addEventListener('scroll', resetInactivityTimer);
document.addEventListener('mousemove', resetInactivityTimer);

// Start the inactivity timer when the page loads
resetInactivityTimer();
    </script>
    <%- include('./alert_msg.ejs') %>
    <div class="main">
      <% function capitalizeFirstLetter(str) { %> <% return str.replace(/^\w/,
      (c) => c.toUpperCase()); %> <%}%>

      <!-- <h1
      class="my-4"
      style="
        font-family: sans-serif;
        font-weight: bold;
        font-size: 1.5rem;
        text-shadow: 0rem 0.5rem 1.5rem #92a1d1;
      "
    >
      Book 1 Hour meeting with <%= capitalizeFirstLetter(employee.name); %>
    </h1> -->


<div data-id="card-cap" class="cap"></div>

    <div class="header_top">Book meeting with</div>
<div class="meeting-type"> <%= capitalizeFirstLetter(employee.name); %></div>
<div class="duration">ðŸ•’ 1 Hour</div>


    <div style="
      margin-top: -10px;
      margin-bottom: 10px;
      padding: 10px;
      background-color: #ffcccc;
      border-left: 4px solid #ff0000;
      font-family: Arial, sans-serif;
      font-size: 0.9rem;
      color: #333;
    ">
  <p style="margin: 0;">
    <strong>Note:</strong> All timings are in Indian Standard Time (IST). Please select accordingly.
  </p>
</div>


      <div class="mainddddd" >
        
        <div id="container">
          <div id="header">
            <div class="icons">
              <span id="backButton" class="material-symbols-rounded"
                >chevron_left</span
              >
            </div>
            <div id="monthDisplay"></div>
            <div class="icons">
              <span id="nextButton" class="material-symbols-rounded"
                >chevron_right</span
              >
            </div>
          </div>

          <div id="weekdays">
            <div class="Sunday">Sun</div>
            <div class="Monday">Mon</div>
            <div class="Tuesday">Tue</div>
            <div class="Wednesday">Wed</div>
            <div class="Thursday">Thu</div>
            <div class="Friday">Fri</div>
            <div class="Saturday">Sat</div>
          </div>

          <div id="calendar"></div>
        </div>

        <div id="newEventModal">
          <h2>New Event</h2>

          <input id="eventTitleInput" placeholder="Event Title" />

          <button id="saveButton">Save</button>
          <button id="cancelButton">Cancel</button>
        </div>

        <div id="deleteEventModal">
          <h2>Event</h2>

          <p id="eventText"></p>

          <button id="deleteButton">Delete</button>
          <button id="closeButton">Close</button>
        </div>

        <div id="modalBackDrop"></div>
        <div id="initialMessage">
          <h1>Date-specific hours</h1>
          <p>Please select a appoinment according to <%= capitalizeFirstLetter(employee.name); %>'s available time.</p>
      </div>
      
        <div
          class="last_for_display_time"
          style="width: 295px; padding-top: 6%"
        ></div>
      </div>
    </div>

    <script>
       function hideInitialMessage() {
    document.getElementById('initialMessage').style.display = 'none';
}
      function changeColor(button) {
        button.classList.add("clicked");
      }
    </script>
    <script>
     

      const employee = JSON.parse(`<%- JSON.stringify(employee) %>`);
      let nav = 0;
      let clicked = null;

      const calendar = document.getElementById("calendar");
      const newEventModal = document.getElementById("newEventModal");
      const deleteEventModal = document.getElementById("deleteEventModal");
      const backDrop = document.getElementById("modalBackDrop");
      const eventTitleInput = document.getElementById("eventTitleInput");
      const weekdays = [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
      ];

      function load() {
        const dt = new Date();
        // console.log("nav=", nav);
        dt.setDate(1);
        // console.log("DATE=", dt);

        // console.log("MONTH = ", dt.getMonth() , dt.getMonth() + nav);

        // dt.setMonth((new Date().getMonth()) + nav);
        dt.setMonth(dt.getMonth() + nav);
        // console.log(dt)

        const day = dt.getDate();
        const month = dt.getMonth();
        const year = dt.getFullYear();
        // const month1 = (dt.getMonth() + 1).toString().padStart(2, '0');

        // console.log(day,month,year )

        const firstDayOfMonth = new Date(year, month, 1);
        const daysInMonth = new Date(year, month + 1, 0).getDate();
        // console.log(firstDayOfMonth, daysInMonth)

        const dateString = firstDayOfMonth.toLocaleDateString("en-us", {
          weekday: "long",
          year: "numeric",
          month: "numeric",
          day: "numeric",
        });
        // console.log('datestring'+ dateString)
        const paddingDays = weekdays.indexOf(dateString.split(", ")[0]);
        // console.log(paddingDays + 'a;sldkfja;sldkfj')
        document.getElementById(
          "monthDisplay"
        ).innerText = `${dt.toLocaleDateString("en-us", {
          month: "long",
        })} ${year}`;

        calendar.innerHTML = "";

        for (let i = 1; i <= paddingDays + daysInMonth; i++) {
          const daySquare = document.createElement("div");
          daySquare.classList.add("day");

          if (i > paddingDays) {
            daySquare.innerText = i - paddingDays;
            // const eventForDay = events.find(e => e.date === dayString);
            const dayString = `${i - paddingDays}/${month + 1}/${year}`;
            const parts = dayString.split("/");
            const formattedDate = `${parts[0].padStart(2, "0")}/${month + 1}/${
              parts[2]
            }`;
            //  console.log('this is daystring'+ formattedDate)

            daySquare.classList.add(`day_${i - paddingDays}`);
            const d = new Date();
            if (d.getDate() == i - paddingDays && d.getMonth() == month) {
              // console.log(,"month")

              daySquare.style.backgroundColor = "#89abc9";
            }

            function parseFormattedDateTime(formattedDate, formattedTime) {
              const [day, month, year] = formattedDate.split("/");
              const [hours, minutes] = formattedTime.split(":");
              return new Date(year, month - 1, day, hours, minutes);
            }

            function parseISODate(isoDateString) {
              return new Date(isoDateString);
            }

            function isDateTimeInArray(formattedDate, formattedTime) {
              // console.log("ðŸš€ ~ isDateTimeInArray ~ formattedTime:", formattedTime)
              // console.log("ðŸš€ ~ isDateTimeInArray ~ formattedDate:", formattedDate)
              function formatTimeFromJSDate(date) {
                // Get hours and minutes from the Date object
                const hours = date.getHours();
                const minutes = date.getMinutes();

                // Add leading zeros if needed
                const formattedHours = hours < 10 ? `0${hours}` : hours;
                const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;

                // Combine hours and minutes in "hh:mm" format
                const formattedTime = `${formattedHours}:${formattedMinutes}`;

                return formattedTime;
              }
              function formatDateFromString(dateString) {
              
                const date = new Date(dateString);
               
                const options = {
                  day: "2-digit",
                  month: "2-digit",
                  year: "numeric",
                };

                // Format the date using local time zone
                const formattedDateString = date.toLocaleDateString(
                  undefined,
                  options
                );
                // console.log("ðŸš€ ~ formatDateFromString ~ formattedDateString:", formattedDateString)

                return formattedDateString;
              }

              const array = JSON.parse(`<%- JSON.stringify(time_slots) %>`);


              const providedDate = formattedDate;






              // console.log("ðŸš€ ~ isDateTimeInArray ~ array:", array)
              const dateTimeToCheck = parseFormattedDateTime(
                formattedDate,
                formattedTime
              );

              // console.log(array);

              // console.log("ðŸš€ ~ isDateTimeInArray ~ dateTimeToCheck:", dateTimeToCheck)
              const isMatchingDateTime = array.some((obj) => {
                // var fromDate = formatDateFromString(obj.from_date);
                // console.log("ðŸš€ ~ isMatchingDateTime ~ obj.from_date:", obj.from_date)
                var fromDate = moment(obj.from_date).format("DD/MM/YYYY");
                // console.log("ðŸš€ ~ isMatchingDateTime ~ fromDate:", fromDate)
                var timeDate = obj.time;
                

                var timec = formatTimeFromJSDate(dateTimeToCheck);
               
                var inputDate = moment(`${moment(obj.from_date).format("MM/DD/YYYY")} ${timeDate}`);
                // console.log("ðŸš€ ~ inputDate:", inputDate)
                              
                return moment(dateTimeToCheck).isBetween(moment(inputDate).startOf("hour"), moment(inputDate).endOf("hour"), null, []);

                
              });

              // console.log(isMatchingDateTime);

              return isMatchingDateTime;
            }

            document.querySelector(".last_for_display_time").innerHTML = ``;

            var dddd = new Date();
            dddd.setHours(0, 0, 0, 0);
            dddd = dddd.getTime();
            var date_to_compare = new Date(year, month, i - paddingDays);
            date_to_compare.setHours(0, 0, 0, 0);
            date_to_compare = date_to_compare.getTime();
            // console.log(dddd, date_to_compare, i - paddingDays);

            if (date_to_compare >= dddd) {
            
              const array = JSON.parse(`<%- JSON.stringify(time_slots) %>`);


                const providedDate = formattedDate;

// Convert the provided date to a JavaScript Date object using Moment.js
const providedDateObj = moment(providedDate, 'DD/MM/YYYY').toDate();

// Count the number of objects with the provided date
const count = array.filter(obj => moment(obj.from_date).isSame(providedDateObj, 'day')).length;

console.log(count)               


              daySquare.addEventListener("click", () => {
                hideInitialMessage(); 
                
                var html_to_appent = ``;
                html_to_appent= `${html_to_appent} ${formattedDate}`

if(count>=2){
  html_to_appent=`No empty slots on ${formattedDate} please try another date.`

}
else{

                // const dataString = JSON.stringify(formattedData);

               // console.log(employee)

                 for (var k = 0; k <= 11; k++) {
                 
                 
                  if (k == 0) {
                    if (!isDateTimeInArray(formattedDate, "12:00")) {
                      

                      var date = moment(formattedDate, 'DD/MM/YYYY');

                        var dayName = date.format('dddd');
                        var indexOfTheObjectWhichContainsDayname = employee.days.findIndex(d => d.day === dayName);

                    if(employee.days.some(d => d.day === dayName)){
                      


                      //have to put the days loop in here 


                    if(employee.days[indexOfTheObjectWhichContainsDayname].slots.indexOf(`12-1`) !== -1){    
                      var new_string = `${formattedDate} <form action="/fake_login" method="post" >
      
                            <input type="string" name="date_of_ap" value="${formattedDate}" style="display:none;" >
                                   <input type="string" name="employee_id" value="<%=employee._id%>" style="display:none;"  >

     
        
                                 <input type="time" name="from_time" value="12:00" style="display:none;" >
                <button class="fbtn" type="submit" onclick="changeColor(this)">12:00 PM</button>
          
                                </form>`;
                      
                      // html_to_appent = `${html_to_appent} ${new_string}`;
                      html_to_appent = ` ${new_string}`;

                              }
                              else{
                                html_to_appent = `${html_to_appent} `;
                              
                              }
                            }
                            else{
                                html_to_appent = ` ${employee.name} is not free on ${formattedDate}`;
                                break;
                              }
                    } else {
                      var new_string = ` <form>
      
     
                        <button style="display:flex; flex-direction: column;justify-content:center;align-items:center; color:red" class="fbtn" type="btn" onclick="changeColor(this)">12:00 PM <font> Already Occupied</font></button>


          </form>`;
                      
                      html_to_appent = `${html_to_appent} ${new_string}`;
                    }
                  } else {
                    if (!isDateTimeInArray(formattedDate, `${12 + k}:00`)) {

                      var date = moment(formattedDate, 'DD/MM/YYYY');

                      var dayName = date.format('dddd');
                      //console.log(dayName);

                      if(employee.days.some(d => d.day === dayName)){
                        var indexOfTheObjectWhichContainsDayname = employee.days.findIndex(d => d.day === dayName);

                        console.log("==",indexOfTheObjectWhichContainsDayname)

                      
                      if(employee.days[indexOfTheObjectWhichContainsDayname].slots.indexOf(`${k}-${k+1}`) !== -1){ 

                      var new_string = `<form action="/fake_login" method="post" >
      
      <input type="string" name="date_of_ap" value="${formattedDate}" style="display:none;" >
      <input type="string" name="employee_id" value="<%=employee._id%>" style="display:none;"  >

     
        
           <input type="time" name="from_time" value="${
             12 + k
           }:00" style="display:none;" >
          <button class="fbtn" type="submit" onclick="changeColor(this)">0${k}:00 PM</button>
          
    </form>`;

                      html_to_appent = `${html_to_appent} ${new_string}`;
                    }else{
                               
                                html_to_appent = `${html_to_appent} `;
                              }
                            
                            }else{
                                html_to_appent = `${html_to_appent} ${employee.name} is not free on ${formattedDate}`;
                                html_to_appent = `${html_to_appent} `;
                                break;
                                

                              }

                    }
                     else {
                      
                    var new_string = ` <div>
      
     
      <button type="button" style="display:flex; flex-direction: column;justify-content:center;align-items:center;color:red" class="fbtn" type="btn" onclick="changeColor(this)">0${k}:00 PM <font> Already Occupied</font></button>
      
                </div>`;
                      
                      html_to_appent = `${html_to_appent} ${new_string}`;
                    }
                  }
                }


            
 }  //count's else is ending here 




              html_to_appent = ` <div id="time-picker" style="text-align: center;">${html_to_appent} </div>`;

document.querySelector(".last_for_display_time").innerHTML =
  html_to_appent;
              });
              
            
}
         
          
          } else {
            daySquare.classList.add("padding");
          }

          calendar.appendChild(daySquare);
        }
      }

      function initButtons() {
        document.getElementById("nextButton").addEventListener("click", () => {
          // console.log('button is clicked!!!!!!!!!!!!')
          nav++;
          load();
        });

        document.getElementById("backButton").addEventListener("click", () => {
          nav--;
          load();
        });
      }

      initButtons();

      load();

      function changeHeadingText() {
        var Sunday = document.querySelector(".Sunday");
        var Monday = document.querySelector(".Monday");
        var Tuesday = document.querySelector(".Tuesday");
        var Wednesday = document.querySelector(".Wednesday");
        var Thursday = document.querySelector(".Thursday");
        var Friday = document.querySelector(".Friday");
        var Saturday = document.querySelector(".Saturday");

        var windowWidth = window.innerWidth;

        if (windowWidth <= 768) {
          Sunday.textContent = "Sun";
          Monday.textContent = "Mon";
          Tuesday.textContent = "Teu";
          Wednesday.textContent = "Wed";
          Thursday.textContent = "Thu";
          Friday.textContent = "Fri";
          Saturday.textContent = "Sat";
        }
      }

      // Run the function on page load and window resize
      window.addEventListener("load", changeHeadingText);
      window.addEventListener("resize", changeHeadingText);
    </script>
    <script>
      function changeColor(button) {
        var buttons = document.querySelectorAll(".navbar a");
        buttons.forEach(function (btn) {
          btn.classList.remove("clicked");
        });
        button.classList.add("clicked");
      }
    </script>

    <script>
      const mainDiv = document.querySelector(".mainDiv");
      const childDivs = Array.from(mainDiv.children);

      childDivs.sort((a, b) => {
        const dateA = parseDate(a.querySelector("h1").textContent);
        const dateB = parseDate(b.querySelector("h1").textContent);
        return dateA - dateB;
      });

      childDivs.forEach((div) => mainDiv.appendChild(div));

      function parseDate(dateString) {
        const [day, month, year] = dateString.split("/").map(Number);
        return new Date(year + 2000, month - 1, day); // Converting to comparable format
      }
    </script>
   
    <script
      src="https://code.jquery.com/jquery-3.4.1.slim.min.js"
      integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
      integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js"
      integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
